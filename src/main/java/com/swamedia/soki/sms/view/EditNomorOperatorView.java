package com.swamedia.soki.sms.view;

import com.swamedia.soki.sms.config.DataHolder;
import com.swamedia.soki.sms.controller.OperatorController;
import com.swamedia.soki.sms.model.POperator;

import java.awt.Dimension;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.event.ActionListener;
import java.math.BigDecimal;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author scatt labs
 */
public class EditNomorOperatorView extends javax.swing.JDialog {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	boolean update = false;
	String nomorEdit;

	/**
	 * Creates new form EditViewNomorOperator
	 */
	public EditNomorOperatorView(java.awt.Frame parent, boolean modal, POperator operator) {
		super(parent, modal);
		initComponents();
		init(operator);
	}

	public void init(POperator operator) {
		labelOutputID.setText("" + operator.getIdTbl());
		labelOutputOPeratorKode.setText(operator.getIdoperator());
		labelOutputOperatorNama.setText(operator.getNamaoperator());
		if (operator.getHp() != null) {
			OperatorController.getInstance().populateTableNomor(this, operator.getHp());
		}
	}

	public javax.swing.JLabel getLabelOutputID() {
		return labelOutputID;
	}

	public javax.swing.JTextField getTextNoHP() {
		return textNoHP;
	}

	public javax.swing.JTable getTableNomor() {
		return tableNomor;
	}

	public javax.swing.JButton getButtonSave() {
		return buttonSave;
	}

	public void actionEdit() {
		int baris = tableNomor.getSelectedRow();
		if (baris < 0) {
			messageWarning();
		} else {
			nomorEdit = tableNomor.getValueAt(baris, 1).toString();
			textNoHP.setText(nomorEdit);
			update = true;
		}
	}

	public void actionDelete() {
		int baris = tableNomor.getSelectedRow();
		if (baris < 0) {
			messageWarning();
		} else {
			String nomorDelete = tableNomor.getValueAt(baris, 1).toString();
			String nomorNew = "";
			int response = JOptionPane.showConfirmDialog(null, "Yakin menghapus nomor " + nomorDelete + "?");
			if (response == 0) {
				try {
					for (int i = 0; i < tableNomor.getRowCount(); i++) {
						if (i != baris) {
							if (!nomorNew.equals("")) {
								nomorNew = nomorNew + "," + tableNomor.getValueAt(i, 1);
							} else {
								nomorNew = "" + tableNomor.getValueAt(i, 1);
							}
						}
					}
					POperator operator = DataHolder.getInstance().getOperatorDao()
							.find(new BigDecimal(labelOutputID.getText()));
					operator.setHp(nomorNew);
					DataHolder.getInstance().getOperatorDao().save(operator);
					OperatorController.getInstance().populateTableNomor(this, operator.getHp());
					JOptionPane.showMessageDialog(MainForm.getInstance(),
							"Nomor dengan no " + nomorDelete + " berhasil di hapus", "INFO", 1);
				} catch (Exception e) {
					JOptionPane.showMessageDialog(MainForm.getInstance(), e.getMessage(), "ERROR", 3);
					// TODO: handle exception
				}
			}
		}
	}

	private void messageWarning() {
		JOptionPane.showMessageDialog(this, "Pilih salah satu nomor di tabel", "WARNING", 2);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	public void actionSave() {
		try {
			loading(true);
			if (update) {
				actionEdit(nomorEdit);
				update = false;
				textNoHP.setText("");
			} else {
				OperatorController.getInstance().addNomor(this);
			}
			loading(false);
		} catch (Exception e) {
			loading(false);
			// TODO: handle exception
		}
	}

	public void actionEdit(String nomorEdit) {
		POperator operator = DataHolder.getInstance().getOperatorDao().find(new BigDecimal(labelOutputID.getText()));
		operator.setHp(operator.getHp().replace(nomorEdit, textNoHP.getText()));
		DataHolder.getInstance().getOperatorDao().save(operator);
		OperatorController.getInstance().populateTableNomor(this, operator.getHp());
		JOptionPane.showMessageDialog(MainForm.getInstance(), "Nomor dengan no " + nomorEdit + " berhasil diubah",
				"INFO", 1);
	}

	public void loading(boolean active) {
		if (active) {
			labelLoading.setIcon(
					new javax.swing.ImageIcon(getClass().getResource("/com/swamedia/soki/sms/images/loading3.gif")));
		} else {
			labelLoading.setIcon(null);
		}

	}

	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		labelOutputOPeratorKode = new javax.swing.JLabel();
		labelOutputOperatorNama = new javax.swing.JLabel();
		textNoHP = new javax.swing.JTextField();
		textNoHP.addKeyListener(new KeyAdapter() {
			@Override
			public void keyPressed(KeyEvent evt) {
				if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
					buttonSave.requestFocus();
					actionSave();
				}
			}

			@Override
			public void keyTyped(KeyEvent evt) {
				char c = evt.getKeyChar();
				if (textNoHP.getText().length() >= 12) {
					getToolkit().beep();
					evt.consume();
				} else {
					if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)))) {
						getToolkit().beep();
						evt.consume();
					}
				}
			}
		});
		buttonSave = new javax.swing.JButton();
		buttonSave.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				if (!textNoHP.getText().equals("")) {
					actionSave();
				} else {
					JOptionPane.showMessageDialog(null, "Field Nomor Tidak Boleh Kosong", "WARNING", 2);
				}

			}
		});
		jScrollPane1 = new javax.swing.JScrollPane();
		tableNomor = new javax.swing.JTable();
		buttonEdit = new javax.swing.JButton();
		buttonEdit.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				actionEdit();
			}
		});
		buttonDelete = new javax.swing.JButton();
		buttonDelete.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				actionDelete();
			}
		});

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Edit / View Nomor Operator");

		jLabel1.setText("Operator Kode");

		jLabel2.setText("Operator Nama");

		jLabel3.setText("Nomor HP");

		labelOutputOPeratorKode.setText("-");

		labelOutputOperatorNama.setText("-");

		buttonSave.setText("Save");

		tableNomor.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "Nomor" }));
		jScrollPane1.setViewportView(tableNomor);
		if (tableNomor.getColumnModel().getColumnCount() > 0) {
			tableNomor.getColumnModel().getColumn(0).setResizable(false);
		}

		buttonEdit.setText("Edit");

		buttonDelete.setText("Delete");

		JLabel lblId = new JLabel("ID");

		labelOutputID = new JLabel("-");

		label = new JLabel("");

		labelLoading = new JLabel("");

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING).addGroup(jPanel1Layout
				.createSequentialGroup().addContainerGap()
				.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
						.addGroup(jPanel1Layout.createSequentialGroup().addComponent(jLabel2).addGap(15)
								.addComponent(labelOutputOperatorNama, GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE))
						.addGroup(jPanel1Layout.createSequentialGroup().addComponent(jLabel3).addGap(42)
								.addGroup(jPanel1Layout
										.createParallelGroup(Alignment.LEADING).addGroup(
												jPanel1Layout.createSequentialGroup()
														.addComponent(textNoHP, GroupLayout.PREFERRED_SIZE, 114,
																GroupLayout.PREFERRED_SIZE)
														.addPreferredGap(ComponentPlacement.RELATED)
														.addComponent(buttonSave))
										.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING)
												.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 283,
														GroupLayout.PREFERRED_SIZE)
												.addGroup(
														jPanel1Layout.createSequentialGroup().addComponent(buttonDelete)
																.addPreferredGap(ComponentPlacement.RELATED)
																.addComponent(buttonEdit))))
								.addPreferredGap(ComponentPlacement.RELATED, 18, Short.MAX_VALUE))
						.addGroup(jPanel1Layout.createSequentialGroup()
								.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING, false)
										.addGroup(jPanel1Layout.createSequentialGroup().addComponent(jLabel1).addGap(18)
												.addComponent(labelOutputOPeratorKode, GroupLayout.DEFAULT_SIZE,
														GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
										.addGroup(jPanel1Layout.createSequentialGroup().addComponent(lblId).addGap(78)
												.addComponent(labelOutputID, GroupLayout.PREFERRED_SIZE, 147,
														GroupLayout.PREFERRED_SIZE)))
								.addGap(18).addComponent(labelLoading, GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
								.addPreferredGap(ComponentPlacement.UNRELATED)
								.addComponent(label, GroupLayout.PREFERRED_SIZE, 0, GroupLayout.PREFERRED_SIZE)))
				.addContainerGap()));
		jPanel1Layout
				.setVerticalGroup(
						jPanel1Layout.createParallelGroup(Alignment.TRAILING)
								.addGroup(
										jPanel1Layout.createSequentialGroup().addContainerGap()
												.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
														.addComponent(lblId).addComponent(labelOutputID)
														.addComponent(label, GroupLayout.PREFERRED_SIZE, 20,
																GroupLayout.PREFERRED_SIZE)
														.addComponent(labelLoading))
												.addPreferredGap(ComponentPlacement.RELATED)
												.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
														.addComponent(jLabel1).addComponent(labelOutputOPeratorKode))
												.addPreferredGap(ComponentPlacement.RELATED)
												.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
														.addComponent(jLabel2).addComponent(labelOutputOperatorNama))
												.addPreferredGap(ComponentPlacement.RELATED)
												.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
														.addComponent(textNoHP, GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
														.addComponent(jLabel3).addComponent(buttonSave))
												.addPreferredGap(ComponentPlacement.RELATED)
												.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 88,
														GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(ComponentPlacement.UNRELATED)
												.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
														.addComponent(buttonEdit).addComponent(buttonDelete))
												.addContainerGap()));
		jPanel1.setLayout(jPanel1Layout);

		getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

		setSize(new Dimension(416, 272));
		setLocationRelativeTo(null);
	}// </editor-fold>//GEN-END:initComponents

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton buttonSave;
	private javax.swing.JButton buttonEdit;
	private javax.swing.JButton buttonDelete;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel labelOutputOPeratorKode;
	private javax.swing.JLabel labelOutputOperatorNama;
	private javax.swing.JLabel labelOutputID;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable tableNomor;
	private javax.swing.JTextField textNoHP;
	private JLabel label;
	private JLabel labelLoading;
}
